{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Promoting Open Science in Learning Analytics: An Interactive Tutorial on Licensing, Data, and Containers Important This event has been postponed for Learning Analytics in Practice (LAP2024) on June 18 th -20 th , 2024. Conference: LAK 2024 | March 18 th - 22 nd , 2024 | Kyoto, Japan Online ( Zoom ): #March 19 th 8:00 PM - 11:00 PM JST# $2024-03-19 20:00:00-23:00:00 +09:00$ Password if Required: LAK-24 Across the past decade, the open science movement has increased its momentum, making research more openly available and reproducible across different environments. In parallel, learning analytics, as a subfield of education technology, has been increasing as well, providing more accurate statistical models and integrations to improve learning. However, there is a discernible gap between the understanding and application of open science practices in learning analytics. In this tutorial, we will expand the knowledge base towards open data and open analysis. First, we will introduce the complexities of intellectual property and licensing within open science. Next, we will provide insights into data sharing methods that preserve the privacy of participants. Finally, we will conclude with an interactive demonstration on sharing research materials reproducibly. We will tailor the content towards the needs and goals of the participants, enabling researchers with the necessary resources and knowledge to implement these concepts effectively and responsibly. This project is available on OSF under the CC-BY-4.0 License .","title":"Introduction"},{"location":"#promoting-open-science-in-learning-analytics-an-interactive-tutorial-on-licensing-data-and-containers","text":"Important This event has been postponed for Learning Analytics in Practice (LAP2024) on June 18 th -20 th , 2024. Conference: LAK 2024 | March 18 th - 22 nd , 2024 | Kyoto, Japan Online ( Zoom ): #March 19 th 8:00 PM - 11:00 PM JST# $2024-03-19 20:00:00-23:00:00 +09:00$ Password if Required: LAK-24 Across the past decade, the open science movement has increased its momentum, making research more openly available and reproducible across different environments. In parallel, learning analytics, as a subfield of education technology, has been increasing as well, providing more accurate statistical models and integrations to improve learning. However, there is a discernible gap between the understanding and application of open science practices in learning analytics. In this tutorial, we will expand the knowledge base towards open data and open analysis. First, we will introduce the complexities of intellectual property and licensing within open science. Next, we will provide insights into data sharing methods that preserve the privacy of participants. Finally, we will conclude with an interactive demonstration on sharing research materials reproducibly. We will tailor the content towards the needs and goals of the participants, enabling researchers with the necessary resources and knowledge to implement these concepts effectively and responsibly. This project is available on OSF under the CC-BY-4.0 License .","title":"Promoting Open Science in Learning Analytics: An Interactive Tutorial on Licensing, Data, and Containers"},{"location":"agenda/","text":"Agenda The times provided are approximated for the maximum amount of time spent on each section. The sections may be shorter depending on the session. Introductions - 10 Minutes Intellectual Property (IP) and Licensing - 20 Minutes Open Data and Data Enclaves - 1 Hour Break - 20 minutes Open Materials and Containerization - 1 Hour Wrap Up and Summary - 10 Minutes Tutorial Organization The proposed tutorial will occur over half a day, focusing on introducing some common open science practices and their usage within learning analytics, along with some interactive examples on how to apply the concepts in research. The target audience is researchers, as the practices offer structure and robustness. This approach will allow us to present a responsive tutorial and foster additional community around open science topics. Prior to the Conference Prior to the conference, we will be compiling and organizing all relevant resources to be published on a dedicated website for easy access both during and after the tutorial. In addition, we will request all registrants to complete a pre-survey (using the participant registration list following the author registration/early registration deadlines). This survey will gather insights about participants\u2019 prior experience with the topics and their specific expectations from the tutorial. We will use this data to customize the tutorial and tailor to the needs of participants. During the Conference Our tutorial session will be an interactive and responsive session split into three sections. These sections are outlined below: We will begin the tutorial by discussing how Intellectual Property (IP) intersects with the Open Science Framework. We'll tackle any questions or concerns from attendees with a focus on code licensing, guided by the principles from Creative Commons. We will discuss why licensing code is important, strategies to safeguard a researcher's intellectual property, and provide guidelines for both Tech Transfer and University IP protection. In the next segment of our tutorial, we discuss Open Data relative to the needs of participants. We anticipate opening this section by again addressing participant concerns to frame our future discussion. This will include identifying personal, moral, institutional, or legal concerns regarding open data. Participants will be introduced to the concept of Data Enclaves. This will cover understanding the primary objectives of sharing data (including identifying the goals of the individual research team), the relationship between Data Enclaves and GDPR/Privacy legislation, and real-world examples of accessing information via these enclaves. Furthermore, we will provide valuable resources on establishing and efficiently using Data Enclaves. We will also discuss how researchers can share anonymized and synthetic datasets, ensuring the identity of participants remains confidential. We will close this segment of the tutorial with a general discussion, weighing the advantages and drawbacks of each approach. Throughout this section, we will emphasize that there is not a \u201cone size fits all\u201d solution and that researchers should make choices based on individual goals and requirements. Finally, we will provide instruction towards sharing materials in a reproducible manner, including best practices on storage, documentation, and privacy. This will be demonstrated with an interactive example using development containers via Visual Studio Code and Docker . The specific example used will be tailored based on survey responses. Following the Conference After the conference, all additional resources created for the tutorial will be uploaded to the project\u2019s homepage for preservation. As this tutorial wants to repeat and expand upon open science and reproducibility at prior tutorials across conferences, an additional project will be created on the OSF website containing components pointing to all previous conferences and resources. A post-survey will be available at the end and after the tutorial to obtain feedback about the presentation for future use. An aggregate of the response will also be made public on the project\u2019s homepage. A Discord channel will be created following the tutorial to foster community on these topics.","title":"Agenda"},{"location":"agenda/#agenda","text":"The times provided are approximated for the maximum amount of time spent on each section. The sections may be shorter depending on the session. Introductions - 10 Minutes Intellectual Property (IP) and Licensing - 20 Minutes Open Data and Data Enclaves - 1 Hour Break - 20 minutes Open Materials and Containerization - 1 Hour Wrap Up and Summary - 10 Minutes","title":"Agenda"},{"location":"agenda/#tutorial-organization","text":"The proposed tutorial will occur over half a day, focusing on introducing some common open science practices and their usage within learning analytics, along with some interactive examples on how to apply the concepts in research. The target audience is researchers, as the practices offer structure and robustness. This approach will allow us to present a responsive tutorial and foster additional community around open science topics.","title":"Tutorial Organization"},{"location":"agenda/#prior-to-the-conference","text":"Prior to the conference, we will be compiling and organizing all relevant resources to be published on a dedicated website for easy access both during and after the tutorial. In addition, we will request all registrants to complete a pre-survey (using the participant registration list following the author registration/early registration deadlines). This survey will gather insights about participants\u2019 prior experience with the topics and their specific expectations from the tutorial. We will use this data to customize the tutorial and tailor to the needs of participants.","title":"Prior to the Conference"},{"location":"agenda/#during-the-conference","text":"Our tutorial session will be an interactive and responsive session split into three sections. These sections are outlined below: We will begin the tutorial by discussing how Intellectual Property (IP) intersects with the Open Science Framework. We'll tackle any questions or concerns from attendees with a focus on code licensing, guided by the principles from Creative Commons. We will discuss why licensing code is important, strategies to safeguard a researcher's intellectual property, and provide guidelines for both Tech Transfer and University IP protection. In the next segment of our tutorial, we discuss Open Data relative to the needs of participants. We anticipate opening this section by again addressing participant concerns to frame our future discussion. This will include identifying personal, moral, institutional, or legal concerns regarding open data. Participants will be introduced to the concept of Data Enclaves. This will cover understanding the primary objectives of sharing data (including identifying the goals of the individual research team), the relationship between Data Enclaves and GDPR/Privacy legislation, and real-world examples of accessing information via these enclaves. Furthermore, we will provide valuable resources on establishing and efficiently using Data Enclaves. We will also discuss how researchers can share anonymized and synthetic datasets, ensuring the identity of participants remains confidential. We will close this segment of the tutorial with a general discussion, weighing the advantages and drawbacks of each approach. Throughout this section, we will emphasize that there is not a \u201cone size fits all\u201d solution and that researchers should make choices based on individual goals and requirements. Finally, we will provide instruction towards sharing materials in a reproducible manner, including best practices on storage, documentation, and privacy. This will be demonstrated with an interactive example using development containers via Visual Studio Code and Docker . The specific example used will be tailored based on survey responses.","title":"During the Conference"},{"location":"agenda/#following-the-conference","text":"After the conference, all additional resources created for the tutorial will be uploaded to the project\u2019s homepage for preservation. As this tutorial wants to repeat and expand upon open science and reproducibility at prior tutorials across conferences, an additional project will be created on the OSF website containing components pointing to all previous conferences and resources. A post-survey will be available at the end and after the tutorial to obtain feedback about the presentation for future use. An aggregate of the response will also be made public on the project\u2019s homepage. A Discord channel will be created following the tutorial to foster community on these topics.","title":"Following the Conference"},{"location":"attr/","text":"Attributions The following tools and libraries were used in the creation of this webpage: Python 3.9.5 , available under the PSF License Agreement MkDocs 1.4.1 , available under the BSD-2-Clause License Materials for MkDocs 8.5.7 , available under the MIT License PyMdown Extensions 9.7 , available under the MIT License and others Font Awesome , available under the Font Awesome Free License IconPark Outline unlock-one , available under the Apache-2.0 License","title":"Attributions"},{"location":"attr/#attributions","text":"The following tools and libraries were used in the creation of this webpage: Python 3.9.5 , available under the PSF License Agreement MkDocs 1.4.1 , available under the BSD-2-Clause License Materials for MkDocs 8.5.7 , available under the MIT License PyMdown Extensions 9.7 , available under the MIT License and others Font Awesome , available under the Font Awesome Free License IconPark Outline unlock-one , available under the Apache-2.0 License","title":"Attributions"},{"location":"background/","text":"Background Open science and robust reproducibility practices are becoming increasingly adopted within numerous scientific disciplines. Within subfields of educational technology, however, the adoption and review of these practices are sparsely implemented, typically due to a lack of time or incentive to do so (Armeni et al. 1 , 2021; Nosek, 2022 8 ) with some notable exceptions (Cook et al., 2016 4 ; Garc\u00eda-Holgado et al., 2021 5 ; Makel et al., 2019 7 ). Authors have numerous concerns and minimal experience in what can be made publicly available, such as datasets and analysis code (Haim et al., 2023 6 ). As such, there is a need for accessible resources, providing an understanding of open science practices, how they can be used, and how to mitigate potential issues that may arise at a later date. At its core, Open Science seeks to make scientific research, data, and dissemination accessible to all, breaking down the barriers of closed-access publications. It is built on the principles of transparency, collaboration, and shared knowledge. The goals of Open Science are to advance the pace of discovery but also foster a more inclusive, equitable, and accountable scientific community. As with many things, translation from ideals and principles into real-world implementation comes with considerable challenges. For example, open-access publication typically comes with a higher cost for the researcher (in turn damaging goals of equity and accessibility). Similarly, in education research, data sharing often poses challenges. Data are typically collected in partnership with educators, administrators, and students, who authorize the collection of data for a specific study/set of research questions, and often actively prohibit the distribution of data to third parties. Data can be deidentified, but given how intrinsically personal educational data can be, this task can be labor-intensive. Worse, some of the easier forms of deidentification ( such as removing all forum post data prior to sharing ) lead to data no longer being usable for a wide range of research and development goals 2 . Sharing data on a by-request basis and carefully crafting data agreements has long been a potential solution, but it is often ineffective. For example, (Wicherts, Borsboom, Kats, & Molenaar, 2006 10 ) contacted owners of 249 datasets, only receiving a response from 25.7%. Within education technology, (Haim et al., 2023 6 ) contacted the authors of 594 papers, only receiving a response from 37, or 6.2%, of which only 19 responded that their dataset is public or could be requested. Some of the cited reasons were a lack of rights necessary to release the dataset, personally identifiable information was present, or the dataset itself was part of an ongoing study. The task of sharing data requires significant time investment and can be stalled by changes in email addresses or institutions. Open Education Science (van der Zee & Reich, 2018 9 ), a subfield of Open Science, seeks to address problems of transparency and access, specifically in education research, addressing issues of publication bias, lack of access to original published research, and the failure to replicate. The practices proposed by Open Education Science fall into four categories, each related to a phase of educational research: 1) open design, 2) open data, 3) open analysis, and 4) open publication.Of most relevance to the current tutorial are Open Data and Open Analysis. Open Data is about ensuring research data and materials are freely available on public platforms, aiding in replication, assessment, and close examination. However, there can be challenges, especially with educational data. There might be initial agreements that prevent the sharing of data or issues related to personal identifiable information (PII) which restrict what can be made public. Open Analysis emphasizes that analytical methods should be reproducible. This is commonly achieved by sharing the code used for analyses on platforms like GitHub or preregistration websites. But there is a catch; the code is often of limited value without the associated data. Simply put, without Open Data, achieving Open Analysis can be tough. Moreover, there are challenges like \"code rot\" and \"dependency hell\" (as highlighted by Boettiger, 2015 3 ), where changing libraries can render older code unrunnable. Armeni, K., Brinkman, L., Carlsson, R., Eerland, A., Fijten, R., Fondberg, R., Heininga, V. E, Heunis, S., Koh, W. Q., Masselink, M., Moran, N., \u00d3 Baoill, A., Sarafoglou, A., Schettino, A., Schwamm, H., Sjoerds, Z., Teperek, M., van den Akker, O. R, van\u2019t Veer, A., & Zurita-Milla, R. (2021). Towards wide-scale adoption of open science practices: The role of open science communities. Science and Public Policy, 48(5), 605-611. https://doi.org/10.1093/scipol/scab039 \u21a9 Baker, M. 1,500 scientists lift the lid on reproducibility. Nature 533, 452\u2013454 (2016). https://doi.org/10.1038/533452a \u21a9 Boettiger, C. (2015). An introduction to Docker for reproducible research. ACM SIGOPS Operating Systems Review, 49(1), 71-79. https://doi.org/10.1145/2723872.2723882 \u21a9 Cook, B. G., Lloyd, J. W., Mellor, D., Nosek, B. A., & Therrien, W. J. (2018). Promoting open science to increase the trustworthiness of evidence in special education. Exceptional Children, 85(1), 104-118. https://doi.org/10.1177/0741932516637198 \u21a9 Garc\u00eda-Holgado, A., Garc\u00eda-Pe\u00f1alvo, F. J., de la Higuera, C., Teixeira, A., Ehlers, U. D., Bruton, J., Nascimbeni, F., Zea, N. P., & Burgos, D. (2020). Promoting Open Education Through Gamification in Higher Education: the OpenGame project. In Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality. 399-404. https://doi.org/10.1145/3434780.3436688 \u21a9 Haim, A., Baxter, C., Gyurcsan, R., Shaw, S. T., & Heffernan, N. T. (2023, July). How to Open Science: Analyzing the Open Science Statement Compliance of the Learning@ Scale Conference. In Proceedings of the Tenth ACM Conference on Learning@ Scale (pp. 174-182). https://doi.org/10.1145/3573051.3596166 \u21a9 \u21a9 Makel, M. C., Smith, K. N., McBee, M. T., Peters, S. J., & Miller, E. M. (2019). A path to greater credibility: Large-scale collaborative education research. AERA Open, 5(4). https://doi.org/10.1177/2332858419891963. \u21a9 Nosek, B. (2022). Making the Most of the Unconference. Presented at the Unconference on Open Scholarship Practices in Education Research. Available at https://osf.io/9k6pd/ \u21a9 van der Zee, T., & Reich, J. (2018). Open Education Science. AERA Open, 4(3). https://doi.org/10.1177/2332858418787466 \u21a9 Wicherts, J. M., Borsboom, D., Kats, J., & Molenaar, D. (2006). The poor availability of psychological research data for reanalysis. American Psychologist, 61(7), 726\u2013728. https://doi.org/10.1037/0003-066X.61.7.726 \u21a9","title":"Background"},{"location":"background/#background","text":"Open science and robust reproducibility practices are becoming increasingly adopted within numerous scientific disciplines. Within subfields of educational technology, however, the adoption and review of these practices are sparsely implemented, typically due to a lack of time or incentive to do so (Armeni et al. 1 , 2021; Nosek, 2022 8 ) with some notable exceptions (Cook et al., 2016 4 ; Garc\u00eda-Holgado et al., 2021 5 ; Makel et al., 2019 7 ). Authors have numerous concerns and minimal experience in what can be made publicly available, such as datasets and analysis code (Haim et al., 2023 6 ). As such, there is a need for accessible resources, providing an understanding of open science practices, how they can be used, and how to mitigate potential issues that may arise at a later date. At its core, Open Science seeks to make scientific research, data, and dissemination accessible to all, breaking down the barriers of closed-access publications. It is built on the principles of transparency, collaboration, and shared knowledge. The goals of Open Science are to advance the pace of discovery but also foster a more inclusive, equitable, and accountable scientific community. As with many things, translation from ideals and principles into real-world implementation comes with considerable challenges. For example, open-access publication typically comes with a higher cost for the researcher (in turn damaging goals of equity and accessibility). Similarly, in education research, data sharing often poses challenges. Data are typically collected in partnership with educators, administrators, and students, who authorize the collection of data for a specific study/set of research questions, and often actively prohibit the distribution of data to third parties. Data can be deidentified, but given how intrinsically personal educational data can be, this task can be labor-intensive. Worse, some of the easier forms of deidentification ( such as removing all forum post data prior to sharing ) lead to data no longer being usable for a wide range of research and development goals 2 . Sharing data on a by-request basis and carefully crafting data agreements has long been a potential solution, but it is often ineffective. For example, (Wicherts, Borsboom, Kats, & Molenaar, 2006 10 ) contacted owners of 249 datasets, only receiving a response from 25.7%. Within education technology, (Haim et al., 2023 6 ) contacted the authors of 594 papers, only receiving a response from 37, or 6.2%, of which only 19 responded that their dataset is public or could be requested. Some of the cited reasons were a lack of rights necessary to release the dataset, personally identifiable information was present, or the dataset itself was part of an ongoing study. The task of sharing data requires significant time investment and can be stalled by changes in email addresses or institutions. Open Education Science (van der Zee & Reich, 2018 9 ), a subfield of Open Science, seeks to address problems of transparency and access, specifically in education research, addressing issues of publication bias, lack of access to original published research, and the failure to replicate. The practices proposed by Open Education Science fall into four categories, each related to a phase of educational research: 1) open design, 2) open data, 3) open analysis, and 4) open publication.Of most relevance to the current tutorial are Open Data and Open Analysis. Open Data is about ensuring research data and materials are freely available on public platforms, aiding in replication, assessment, and close examination. However, there can be challenges, especially with educational data. There might be initial agreements that prevent the sharing of data or issues related to personal identifiable information (PII) which restrict what can be made public. Open Analysis emphasizes that analytical methods should be reproducible. This is commonly achieved by sharing the code used for analyses on platforms like GitHub or preregistration websites. But there is a catch; the code is often of limited value without the associated data. Simply put, without Open Data, achieving Open Analysis can be tough. Moreover, there are challenges like \"code rot\" and \"dependency hell\" (as highlighted by Boettiger, 2015 3 ), where changing libraries can render older code unrunnable. Armeni, K., Brinkman, L., Carlsson, R., Eerland, A., Fijten, R., Fondberg, R., Heininga, V. E, Heunis, S., Koh, W. Q., Masselink, M., Moran, N., \u00d3 Baoill, A., Sarafoglou, A., Schettino, A., Schwamm, H., Sjoerds, Z., Teperek, M., van den Akker, O. R, van\u2019t Veer, A., & Zurita-Milla, R. (2021). Towards wide-scale adoption of open science practices: The role of open science communities. Science and Public Policy, 48(5), 605-611. https://doi.org/10.1093/scipol/scab039 \u21a9 Baker, M. 1,500 scientists lift the lid on reproducibility. Nature 533, 452\u2013454 (2016). https://doi.org/10.1038/533452a \u21a9 Boettiger, C. (2015). An introduction to Docker for reproducible research. ACM SIGOPS Operating Systems Review, 49(1), 71-79. https://doi.org/10.1145/2723872.2723882 \u21a9 Cook, B. G., Lloyd, J. W., Mellor, D., Nosek, B. A., & Therrien, W. J. (2018). Promoting open science to increase the trustworthiness of evidence in special education. Exceptional Children, 85(1), 104-118. https://doi.org/10.1177/0741932516637198 \u21a9 Garc\u00eda-Holgado, A., Garc\u00eda-Pe\u00f1alvo, F. J., de la Higuera, C., Teixeira, A., Ehlers, U. D., Bruton, J., Nascimbeni, F., Zea, N. P., & Burgos, D. (2020). Promoting Open Education Through Gamification in Higher Education: the OpenGame project. In Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality. 399-404. https://doi.org/10.1145/3434780.3436688 \u21a9 Haim, A., Baxter, C., Gyurcsan, R., Shaw, S. T., & Heffernan, N. T. (2023, July). How to Open Science: Analyzing the Open Science Statement Compliance of the Learning@ Scale Conference. In Proceedings of the Tenth ACM Conference on Learning@ Scale (pp. 174-182). https://doi.org/10.1145/3573051.3596166 \u21a9 \u21a9 Makel, M. C., Smith, K. N., McBee, M. T., Peters, S. J., & Miller, E. M. (2019). A path to greater credibility: Large-scale collaborative education research. AERA Open, 5(4). https://doi.org/10.1177/2332858419891963. \u21a9 Nosek, B. (2022). Making the Most of the Unconference. Presented at the Unconference on Open Scholarship Practices in Education Research. Available at https://osf.io/9k6pd/ \u21a9 van der Zee, T., & Reich, J. (2018). Open Education Science. AERA Open, 4(3). https://doi.org/10.1177/2332858418787466 \u21a9 Wicherts, J. M., Borsboom, D., Kats, J., & Molenaar, D. (2006). The poor availability of psychological research data for reanalysis. American Psychologist, 61(7), 726\u2013728. https://doi.org/10.1037/0003-066X.61.7.726 \u21a9","title":"Background"},{"location":"organizers/","text":"Organizers Aaron Haim Worcester Polytechnic Institute Stephen J. Hutt Worcester Polytechnic Institute Stacy T. Shaw Worcester Polytechnic Institute Neil T. Heffernan Worcester Polytechnic Institute","title":"Organizers"},{"location":"organizers/#organizers","text":"Aaron Haim Worcester Polytechnic Institute Stephen J. Hutt Worcester Polytechnic Institute Stacy T. Shaw Worcester Polytechnic Institute Neil T. Heffernan Worcester Polytechnic Institute","title":"Organizers"},{"location":"requirements/","text":"Requirements for the Tutorial Pre-Survey Please make sure to fill out the pre-survey as least one week prior to the conference start date: by March 11 th , 2024. This may affect some aspects of the presented tutorial. Link: https://docs.google.com/forms/d/e/1FAIpQLScF979w2MhyvZHYMQV15lQlTG19T5RDpxjNtOwoAMAqbqmtdw/viewform?usp=sharing Visual Studio Code Visual Studio Code (VSCode) Visual Studio Code is a rich text editor created by Microsoft commonly used for programming and integration. Users can build extensions for better support of a particular file. There are other rich text editors or IDEs used by other researcher; however, this tutorial will be centered around using VSCode. VSCode is available under a Microsoft Software License ; however, it can be built manually under the MIT License . Installation You can download VSCode here: https://code.visualstudio.com/download Recommendations We also recommend installing the following extensions for the tutorial. If you do not know how to install extensions, follow these instructions: https://code.visualstudio.com/docs/editor/extension-marketplace Name: Docker Id: ms-azuretools.vscode-docker Description: Makes it easy to create, manage, and debug containerized applications. Version: 1.28.0 Publisher: Microsoft VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker Name: Remote Development Id: ms-vscode-remote.vscode-remote-extensionpack Description: An extension pack that lets you open any folder in a container, on a remote machine, or in WSL and take advantage of VS Code's full feature set. Version: 0.25.0 Publisher: Microsoft VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack Docker Docker is a combination of open source projects used to create and manage applications. One of the core features of Docker is the development and distribution of containers: a snapshot of the current working environment, such as an OS. These are particularly useful to ship alongside existing materials such that the user is able to use your environment for reproducibility or replicability of the available research. We will be using Docker to create and distribute containers for the existing papers, so it is highly recommended to download and set up. Docker is provided under the following Terms of Service with its consumed projects under the Apache-2.0 License and others. Installation You can download Docker through the Docker Desktop application: https://docs.docker.com/desktop/ For Linux Users, if you wish to only install the engine, you may do so through the Docker Engine instructions: https://docs.docker.com/engine/install/ Recommendations While this will be reviewed in the tutorial, it is recommended to have a better sense of how permissions work within the containerized application and how it communicates with the host machine. Windows: https://docs.docker.com/desktop/windows/permission-requirements/ macOS: https://docs.docker.com/desktop/mac/permission-requirements/ Linux users may also want to do some post-installation steps to have a better experience with the docker environment: https://docs.docker.com/engine/install/linux-postinstall/","title":"Requirements"},{"location":"requirements/#requirements-for-the-tutorial","text":"","title":"Requirements for the Tutorial"},{"location":"requirements/#pre-survey","text":"Please make sure to fill out the pre-survey as least one week prior to the conference start date: by March 11 th , 2024. This may affect some aspects of the presented tutorial. Link: https://docs.google.com/forms/d/e/1FAIpQLScF979w2MhyvZHYMQV15lQlTG19T5RDpxjNtOwoAMAqbqmtdw/viewform?usp=sharing","title":"Pre-Survey"},{"location":"requirements/#visual-studio-code","text":"","title":"Visual Studio Code"},{"location":"requirements/#visual-studio-code-vscode","text":"Visual Studio Code is a rich text editor created by Microsoft commonly used for programming and integration. Users can build extensions for better support of a particular file. There are other rich text editors or IDEs used by other researcher; however, this tutorial will be centered around using VSCode. VSCode is available under a Microsoft Software License ; however, it can be built manually under the MIT License .","title":"Visual Studio Code (VSCode)"},{"location":"requirements/#installation","text":"You can download VSCode here: https://code.visualstudio.com/download","title":"Installation"},{"location":"requirements/#recommendations","text":"We also recommend installing the following extensions for the tutorial. If you do not know how to install extensions, follow these instructions: https://code.visualstudio.com/docs/editor/extension-marketplace Name: Docker Id: ms-azuretools.vscode-docker Description: Makes it easy to create, manage, and debug containerized applications. Version: 1.28.0 Publisher: Microsoft VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker Name: Remote Development Id: ms-vscode-remote.vscode-remote-extensionpack Description: An extension pack that lets you open any folder in a container, on a remote machine, or in WSL and take advantage of VS Code's full feature set. Version: 0.25.0 Publisher: Microsoft VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack","title":"Recommendations"},{"location":"requirements/#docker","text":"Docker is a combination of open source projects used to create and manage applications. One of the core features of Docker is the development and distribution of containers: a snapshot of the current working environment, such as an OS. These are particularly useful to ship alongside existing materials such that the user is able to use your environment for reproducibility or replicability of the available research. We will be using Docker to create and distribute containers for the existing papers, so it is highly recommended to download and set up. Docker is provided under the following Terms of Service with its consumed projects under the Apache-2.0 License and others.","title":"Docker"},{"location":"requirements/#installation_1","text":"You can download Docker through the Docker Desktop application: https://docs.docker.com/desktop/ For Linux Users, if you wish to only install the engine, you may do so through the Docker Engine instructions: https://docs.docker.com/engine/install/","title":"Installation"},{"location":"requirements/#recommendations_1","text":"While this will be reviewed in the tutorial, it is recommended to have a better sense of how permissions work within the containerized application and how it communicates with the host machine. Windows: https://docs.docker.com/desktop/windows/permission-requirements/ macOS: https://docs.docker.com/desktop/mac/permission-requirements/ Linux users may also want to do some post-installation steps to have a better experience with the docker environment: https://docs.docker.com/engine/install/linux-postinstall/","title":"Recommendations"},{"location":"supplemental/","text":"Supplemental Materials We want to provide you with all the resources we may use during our tutorial. You can find all the tools and links here in addition to their License and Terms of Use ( ToU ) / Service ( ToS ). ORCID iD An ORCID iD is a universally unique digital identifier for a researcher. While ORCID iDs are not the focus of this tutorial, it is still highly recommended for you as a researcher to have one such that all papers you have written can be linked back to you. ORCID iDs are provided under the following Terms of Use . Open Science Framework The Open Science Framework, commonly known as OSF , is a project manager which allows researchers to provide, document, archive, collaborate, share, and register methodologies, materials, data, and outcomes. We will provide a live example on how to create and navigate an OSF project, so it is highly recommended to have one so you can follow along. OSF accounts can be created from an ORCID iD . The Open Science Framework is provided under the Terms of Use provided by the Center for Open Science, Inc. AsPredicted AsPredicted is an alternative to OSF registrations where a research can create a preregistration for their given project. While this tutorial will focus on using OSF for registrations, many researchers use AsPredicted to host their preregistrations, so it is worthwhile to be aware of and understand it. AsPredicted is provided under the following Terms of Use . Git Git is a version control system for project management. Git projects stored on a remote git host (e.g. GitHub ( ToS ), GitLab ( ToU ), etc.) can be integrated into an OSF project for proper version control. Almost all public materials that use a codebase are hosted within a git repository, so you will need to be aware of some basic commands to clone existing repositories and create your own. Git is licensed under the GPL-2.0 License . Git Clients If you would like to use a GUI Client instead of inputting the commands through the terminal, a Git Client can be used instead. In addition to the built-in tools, there a number of third-party tools. Make sure to adhere to the Licenses and ToU / ToS provided. Visual Studio Code ( VSCode ) Visual Studio Code is a rich text editor created by Microsoft commonly used for programming and integration. Users can build extensions for better support of a particular file. There are other rich text editors or IDEs used by other researcher; however, this tutorial will be centered around using VSCode . VSCode is available under a Microsoft Software License ; however, it can be built manually under the MIT License . Docker Docker is a combination of open source projects used to create and manage applications. One of the core features of Docker is the development and distribution of containers: a snapshot of the current working environment, such as an OS . These are particularly useful to ship alongside existing materials such that the user is able to use your environment for reproducibility or replicability of the available research. We will be using Docker to create and distribute containers for the existing papers, so it is highly recommended to download and set up. Docker is provided under the following Terms of Service with its consumed projects under the Apache-2.0 License and others. Python Python is a programming language generally used to produce relatively efficient proof-of-concept code. Researchers typically use Python since it is relatively simple to understand / use and has a large number of packages / modules that can be consumed. It is highly likely one of the projects on the agenda will be written in Python 3, so it is recommended to have or setup through a Docker container. Python 3 is licensed under the PSF License Agreement . R R is a programming language used for statistical computation and graphic representations. Researchers who require more complex mathematics typically use R as the language and packages are written by other mathematicians. It is highly likely one of the projects on the agenda will be written in a version of R, so it is recommended to have or setup through a Docker container. R is licensed under GPL-2.0 License . RStudio RStudio is an IDE created by Posit for programming with R. It is one of the most commonly used IDEs by researchers for R development. While this tutorial will focus more on VSCode , if an R project is used, we will review the subsequent steps for setup in RStudio due to its popularity. RStudio is licensed under AGPL-3.0 License . ECMAScript JavaScript is a programming language typically used for scripting in web applications. A good portion of user-facing web applications use JavaScript or one of its many consumers to provide client-side logic and interactions. Researchers will typically use ECMAScript , a JavaScript standard, in web applications, so it is highly recommended to have a basic understanding of how the language functions. ECMASCript is provided under the ECMA Copyright Notice and software is licensed under the BSD-3-Clause License . Node.js Node.js is a JavaScript runtime environment built on top of Google's V8 engine . Node.js is commonly used by researchers for web applications due to its commonality, integration, and numerous packages written. While you don't need to know any specifics here, it is still a useful material to read up on if you have the time. Node.js is licensed under the MIT License with included external libraries under a variety of licenses. npm npm is a package manager for Node.js. Most applications created by researchers are most likely built with npm since it tends to have easy runtime support and standardized access to published packages. It is highly recommended to review this topic in case you would like to build a front-end web application yourself. npm is licensed under the Artistic-2.0 License with its public registry under the following Terms of Use nvm nvm is a version manager for Node.js and npm. This is particularly useful if you need to use someone else's environment or make your own more robust. All nvm implementations recommended by npm are licensed under the MIT License .","title":"Supplemental Materials"},{"location":"supplemental/#supplemental-materials","text":"We want to provide you with all the resources we may use during our tutorial. You can find all the tools and links here in addition to their License and Terms of Use ( ToU ) / Service ( ToS ).","title":"Supplemental Materials"},{"location":"supplemental/#orcid-id","text":"An ORCID iD is a universally unique digital identifier for a researcher. While ORCID iDs are not the focus of this tutorial, it is still highly recommended for you as a researcher to have one such that all papers you have written can be linked back to you. ORCID iDs are provided under the following Terms of Use .","title":"ORCID iD"},{"location":"supplemental/#open-science-framework","text":"The Open Science Framework, commonly known as OSF , is a project manager which allows researchers to provide, document, archive, collaborate, share, and register methodologies, materials, data, and outcomes. We will provide a live example on how to create and navigate an OSF project, so it is highly recommended to have one so you can follow along. OSF accounts can be created from an ORCID iD . The Open Science Framework is provided under the Terms of Use provided by the Center for Open Science, Inc.","title":"Open Science Framework"},{"location":"supplemental/#aspredicted","text":"AsPredicted is an alternative to OSF registrations where a research can create a preregistration for their given project. While this tutorial will focus on using OSF for registrations, many researchers use AsPredicted to host their preregistrations, so it is worthwhile to be aware of and understand it. AsPredicted is provided under the following Terms of Use .","title":"AsPredicted"},{"location":"supplemental/#git","text":"Git is a version control system for project management. Git projects stored on a remote git host (e.g. GitHub ( ToS ), GitLab ( ToU ), etc.) can be integrated into an OSF project for proper version control. Almost all public materials that use a codebase are hosted within a git repository, so you will need to be aware of some basic commands to clone existing repositories and create your own. Git is licensed under the GPL-2.0 License .","title":"Git"},{"location":"supplemental/#git-clients","text":"If you would like to use a GUI Client instead of inputting the commands through the terminal, a Git Client can be used instead. In addition to the built-in tools, there a number of third-party tools. Make sure to adhere to the Licenses and ToU / ToS provided.","title":"Git Clients"},{"location":"supplemental/#visual-studio-code-vscode","text":"Visual Studio Code is a rich text editor created by Microsoft commonly used for programming and integration. Users can build extensions for better support of a particular file. There are other rich text editors or IDEs used by other researcher; however, this tutorial will be centered around using VSCode . VSCode is available under a Microsoft Software License ; however, it can be built manually under the MIT License .","title":"Visual Studio Code (VSCode)"},{"location":"supplemental/#docker","text":"Docker is a combination of open source projects used to create and manage applications. One of the core features of Docker is the development and distribution of containers: a snapshot of the current working environment, such as an OS . These are particularly useful to ship alongside existing materials such that the user is able to use your environment for reproducibility or replicability of the available research. We will be using Docker to create and distribute containers for the existing papers, so it is highly recommended to download and set up. Docker is provided under the following Terms of Service with its consumed projects under the Apache-2.0 License and others.","title":"Docker"},{"location":"supplemental/#python","text":"Python is a programming language generally used to produce relatively efficient proof-of-concept code. Researchers typically use Python since it is relatively simple to understand / use and has a large number of packages / modules that can be consumed. It is highly likely one of the projects on the agenda will be written in Python 3, so it is recommended to have or setup through a Docker container. Python 3 is licensed under the PSF License Agreement .","title":"Python"},{"location":"supplemental/#r","text":"R is a programming language used for statistical computation and graphic representations. Researchers who require more complex mathematics typically use R as the language and packages are written by other mathematicians. It is highly likely one of the projects on the agenda will be written in a version of R, so it is recommended to have or setup through a Docker container. R is licensed under GPL-2.0 License .","title":"R"},{"location":"supplemental/#rstudio","text":"RStudio is an IDE created by Posit for programming with R. It is one of the most commonly used IDEs by researchers for R development. While this tutorial will focus more on VSCode , if an R project is used, we will review the subsequent steps for setup in RStudio due to its popularity. RStudio is licensed under AGPL-3.0 License .","title":"RStudio"},{"location":"supplemental/#ecmascript","text":"JavaScript is a programming language typically used for scripting in web applications. A good portion of user-facing web applications use JavaScript or one of its many consumers to provide client-side logic and interactions. Researchers will typically use ECMAScript , a JavaScript standard, in web applications, so it is highly recommended to have a basic understanding of how the language functions. ECMASCript is provided under the ECMA Copyright Notice and software is licensed under the BSD-3-Clause License .","title":"ECMAScript"},{"location":"supplemental/#nodejs","text":"Node.js is a JavaScript runtime environment built on top of Google's V8 engine . Node.js is commonly used by researchers for web applications due to its commonality, integration, and numerous packages written. While you don't need to know any specifics here, it is still a useful material to read up on if you have the time. Node.js is licensed under the MIT License with included external libraries under a variety of licenses.","title":"Node.js"},{"location":"supplemental/#npm","text":"npm is a package manager for Node.js. Most applications created by researchers are most likely built with npm since it tends to have easy runtime support and standardized access to published packages. It is highly recommended to review this topic in case you would like to build a front-end web application yourself. npm is licensed under the Artistic-2.0 License with its public registry under the following Terms of Use","title":"npm"},{"location":"supplemental/#nvm","text":"nvm is a version manager for Node.js and npm. This is particularly useful if you need to use someone else's environment or make your own more robust. All nvm implementations recommended by npm are licensed under the MIT License .","title":"nvm"}]}